= Python으로 풀어보는 Problem Solving. 초급자용

* 발표자료: https://docs.google.com/presentation/d/181wmwSY3xJpw-3nN-GUvRPVso4w4y5vrsVW4TWrQQbo/edit[정원사들 시즌5 지식공유회 발표 자료 - June.Kim Python으로 풀어보는 Problem Solving. 초급자용]

== 소개
* 정원사들 시즌2,3,4,5 참여
* 시즌4,5 출석부 개발 및 운영 중
* leetcode, hackerrank 문제를 풀고 있습니다. 하지만 여전히 초보. 그래서 대상은 초보자. C++로 대회참가 하시는 고인분들은 들을게 별로 없을지도


== Problem Solving 하는 이유?
* 성취감
* 회사 코딩 테스트가 어려워 보여서

== Problem Solving
* 직역하면 문제 해결
* Computer Science에서는 문제를 내고 푸는 것이 많습니다.
* 그래서 이 발표에서는 알고리즘 문제풀이
* 입력 형식과 출력 형식이 정해집니다
* 현업과 다른점은 이미 답이 있다
* 채용 시험에서 많이 활용하고 있다
* 요즘은 대부분 Python으로 응시 가능

== Python으로 문제를 풀면 좋은점
=== 비교적 쉬운 문법
* 빠르게 배울 수 있습니다.
=== 적은 행사코드
* 같은 기능은 더 짧은 코드로 구현할 수 있습니다.
* 작성할 코드가 줄어듭니다.
* 1분 1초가 아까운 대회나 테스트에서 큰 장점이 됩니다.
* hello world코드 비교
* min, max 코드 비교
* 배열(리스트) 코드 비교

=== 간단한 자료구조 변경

=== 큰 숫자를 쉽게 다룰 수 있다
* 다른 언어에서는 long long 초과 표현하기 어렵습니다.
* python은 거의 무제한의 숫자 연산과 표현이 가능합니다.

https://junho85.pe.kr/1524[hackerrank - A Very Big Sum - Python3]

=== between 조건문

[source]
----
if s <= x and x <= t:
----

[source]
----
if s <= x <= t:
----

https://junho85.pe.kr/1531[hackerrank - Apple and Orange - Python3]


== 단점?
* c, c++언어 등에 비해 느립니다.
* 하지만 pypy라면 그냥 python보다는 빠릅니다. 하지만 여전히 c++등과 비교하면 느립니다.

== Counter

== 조합 - Combinations

== 순열 - Permutations

== 카티션 곱 - product

== 집합의 합집합과 교집합

== 최대 공약수
